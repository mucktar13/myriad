name: Deploy automation

on:
  release:
    types: [published]
  workflow_run:
    workflows: ['Builder']
    branches: [main]
    types:
      - completed

concurrency:
  group: deploy-automation

jobs:
  compute-build-info:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.build-info.outputs.sha_short }}
      date: ${{ steps.build-info.outputs.date }}
      latest_tag: ${{ steps.build-info.outputs.latest_tag }}
      package_version: ${{ steps.build-info.outputs.package_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%Y%m%d')"

          version=${GITHUB_REF#refs/*/}
          echo $version
          echo "::set-output name=latest_tag::$version"

          package_version=$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo $package_version
          echo "::set-output name=package_version::$package_version"

  deploy-dev:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.DEV_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.DEV_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.DEV_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            WEB_APP_NAME:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_APP_NAME
            WEB_APP_STATUS:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_APP_STATUS
            API_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/API_URL
            API_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/API_KEY
            WEBSITE_URL:${{ secrets.DEV_GCP_PROJECT_ID }}/WEBSITE_URL
            SUPPORT_MAIL:${{ secrets.DEV_GCP_PROJECT_ID }}/SUPPORT_MAIL
            FIREBASE_PROJECT_ID:${{ secrets.DEV_GCP_PROJECT_ID }}/FIREBASE_PROJECT_ID
            FIREBASE_API_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/FIREBASE_API_KEY
            FIREBASE_MESSAGING_SENDER_ID:${{ secrets.DEV_GCP_PROJECT_ID }}/FIREBASE_MESSAGING_SENDER_ID
            WEB_FIREBASE_APP_ID:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_FIREBASE_APP_ID
            WEB_FIREBASE_MEASUREMENT_ID:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_FIREBASE_MEASUREMENT_ID
            WEB_SENTRY_DSN:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_SENTRY_DSN
            WEB_FACEBOOK_APP_ID:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_FACEBOOK_APP_ID
            WEB_DNS:${{ secrets.DEV_GCP_PROJECT_ID }}/WEB_DNS
            SSH_HOST:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.DEV_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-web myriadsocial/myriad-web \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.sha_short }} \
              --set-string config.appName="${{ steps.secrets.outputs.WEB_APP_NAME }}" \
              --set-string config.appStatus=${{ steps.secrets.outputs.WEB_APP_STATUS }} \
              --set-string config.appVersion=${{ needs.compute-build-info.outputs.package_version }}-${{ needs.compute-build-info.outputs.sha_short }} \
              --set-string config.nextAuthURL=https://${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string config.nextSecret=b53fdfd09ee04c267efcde87b4eab030 \
              --set-string config.apiURL=${{ steps.secrets.outputs.API_URL }} \
              --set-string config.apiKey=${{ steps.secrets.outputs.API_KEY }} \
              --set-string config.websiteURL=${{ steps.secrets.outputs.WEBSITE_URL }} \
              --set-string config.supportMail=${{ steps.secrets.outputs.SUPPORT_MAIL }} \
              --set-string config.firebase.projectId=${{ steps.secrets.outputs.FIREBASE_PROJECT_ID }} \
              --set-string config.firebase.apiKey=${{ steps.secrets.outputs.FIREBASE_API_KEY }} \
              --set-string config.firebase.messagingSenderId=${{ steps.secrets.outputs.FIREBASE_MESSAGING_SENDER_ID }} \
              --set-string config.firebase.appId=${{ steps.secrets.outputs.WEB_FIREBASE_APP_ID }} \
              --set-string config.firebase.measurementId=${{ steps.secrets.outputs.WEB_FIREBASE_MEASUREMENT_ID }} \
              --set-string config.sentry.dsn=${{ steps.secrets.outputs.WEB_SENTRY_DSN }} \
              --set-string config.facebook.appId=${{ steps.secrets.outputs.WEB_FACEBOOK_APP_ID }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-app-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-web

  deploy-alpha-release:
    if: "github.event.release.prerelease && contains(needs.compute-build-info.outputs.latest_tag, 'alpha')"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.STG_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.STG_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.STG_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            WEB_APP_NAME:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_APP_NAME
            WEB_APP_STATUS:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_APP_STATUS
            API_URL:${{ secrets.STG_GCP_PROJECT_ID }}/API_URL
            API_KEY:${{ secrets.STG_GCP_PROJECT_ID }}/API_KEY
            WEBSITE_URL:${{ secrets.STG_GCP_PROJECT_ID }}/WEBSITE_URL
            SUPPORT_MAIL:${{ secrets.STG_GCP_PROJECT_ID }}/SUPPORT_MAIL
            FIREBASE_PROJECT_ID:${{ secrets.STG_GCP_PROJECT_ID }}/FIREBASE_PROJECT_ID
            FIREBASE_API_KEY:${{ secrets.STG_GCP_PROJECT_ID }}/FIREBASE_API_KEY
            FIREBASE_MESSAGING_SENDER_ID:${{ secrets.STG_GCP_PROJECT_ID }}/FIREBASE_MESSAGING_SENDER_ID
            WEB_FIREBASE_APP_ID:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_FIREBASE_APP_ID
            WEB_FIREBASE_MEASUREMENT_ID:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_FIREBASE_MEASUREMENT_ID
            WEB_SENTRY_DSN:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_SENTRY_DSN
            WEB_FACEBOOK_APP_ID:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_FACEBOOK_APP_ID
            WEB_DNS:${{ secrets.STG_GCP_PROJECT_ID }}/WEB_DNS
            SSH_HOST:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.STG_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-web myriadsocial/myriad-web \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.appName="${{ steps.secrets.outputs.WEB_APP_NAME }}" \
              --set-string config.appStatus=${{ steps.secrets.outputs.WEB_APP_STATUS }} \
              --set-string config.appVersion=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.nextAuthURL=https://${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string config.nextSecret=b53fdfd09ee04c267efcde87b4eab030 \
              --set-string config.apiURL=${{ steps.secrets.outputs.API_URL }} \
              --set-string config.apiKey=${{ steps.secrets.outputs.API_KEY }} \
              --set-string config.websiteURL=${{ steps.secrets.outputs.WEBSITE_URL }} \
              --set-string config.supportMail=${{ steps.secrets.outputs.SUPPORT_MAIL }} \
              --set-string config.firebase.projectId=${{ steps.secrets.outputs.FIREBASE_PROJECT_ID }} \
              --set-string config.firebase.apiKey=${{ steps.secrets.outputs.FIREBASE_API_KEY }} \
              --set-string config.firebase.messagingSenderId=${{ steps.secrets.outputs.FIREBASE_MESSAGING_SENDER_ID }} \
              --set-string config.firebase.appId=${{ steps.secrets.outputs.WEB_FIREBASE_APP_ID }} \
              --set-string config.firebase.measurementId=${{ steps.secrets.outputs.WEB_FIREBASE_MEASUREMENT_ID }} \
              --set-string config.sentry.dsn=${{ steps.secrets.outputs.WEB_SENTRY_DSN }} \
              --set-string config.facebook.appId=${{ steps.secrets.outputs.WEB_FACEBOOK_APP_ID }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-app-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-web

  deploy-beta-release:
    if: "github.event.release.prerelease && contains(needs.compute-build-info.outputs.latest_tag, 'beta')"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.TESTNET_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.TESTNET_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.TESTNET_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            WEB_APP_NAME:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_APP_NAME
            WEB_APP_STATUS:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_APP_STATUS
            API_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/API_URL
            API_KEY:${{ secrets.TESTNET_GCP_PROJECT_ID }}/API_KEY
            WEBSITE_URL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEBSITE_URL
            SUPPORT_MAIL:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SUPPORT_MAIL
            FIREBASE_PROJECT_ID:${{ secrets.TESTNET_GCP_PROJECT_ID }}/FIREBASE_PROJECT_ID
            FIREBASE_API_KEY:${{ secrets.TESTNET_GCP_PROJECT_ID }}/FIREBASE_API_KEY
            FIREBASE_MESSAGING_SENDER_ID:${{ secrets.TESTNET_GCP_PROJECT_ID }}/FIREBASE_MESSAGING_SENDER_ID
            WEB_FIREBASE_APP_ID:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_FIREBASE_APP_ID
            WEB_FIREBASE_MEASUREMENT_ID:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_FIREBASE_MEASUREMENT_ID
            WEB_SENTRY_DSN:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_SENTRY_DSN
            WEB_FACEBOOK_APP_ID:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_FACEBOOK_APP_ID
            WEB_DNS:${{ secrets.TESTNET_GCP_PROJECT_ID }}/WEB_DNS
            SSH_HOST:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.TESTNET_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-web myriadsocial/myriad-web \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.appName="${{ steps.secrets.outputs.WEB_APP_NAME }}" \
              --set-string config.appStatus=${{ steps.secrets.outputs.WEB_APP_STATUS }} \
              --set-string config.appVersion=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.nextAuthURL=https://${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string config.nextSecret=b53fdfd09ee04c267efcde87b4eab030 \
              --set-string config.apiURL=${{ steps.secrets.outputs.API_URL }} \
              --set-string config.apiKey=${{ steps.secrets.outputs.API_KEY }} \
              --set-string config.websiteURL=${{ steps.secrets.outputs.WEBSITE_URL }} \
              --set-string config.supportMail=${{ steps.secrets.outputs.SUPPORT_MAIL }} \
              --set-string config.firebase.projectId=${{ steps.secrets.outputs.FIREBASE_PROJECT_ID }} \
              --set-string config.firebase.apiKey=${{ steps.secrets.outputs.FIREBASE_API_KEY }} \
              --set-string config.firebase.messagingSenderId=${{ steps.secrets.outputs.FIREBASE_MESSAGING_SENDER_ID }} \
              --set-string config.firebase.appId=${{ steps.secrets.outputs.WEB_FIREBASE_APP_ID }} \
              --set-string config.firebase.measurementId=${{ steps.secrets.outputs.WEB_FIREBASE_MEASUREMENT_ID }} \
              --set-string config.sentry.dsn=${{ steps.secrets.outputs.WEB_SENTRY_DSN }} \
              --set-string config.facebook.appId=${{ steps.secrets.outputs.WEB_FACEBOOK_APP_ID }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-app-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-web

  deploy-pre-release:
    if: "github.event.release.prerelease && contains(needs.compute-build-info.outputs.latest_tag, 'rc')"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.MAINNET_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.MAINNET_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.MAINNET_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            WEB_APP_NAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_APP_NAME
            WEB_APP_STATUS:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_APP_STATUS
            API_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/API_URL
            API_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/API_KEY
            WEBSITE_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEBSITE_URL
            SUPPORT_MAIL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SUPPORT_MAIL
            FIREBASE_PROJECT_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/FIREBASE_PROJECT_ID
            FIREBASE_API_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/FIREBASE_API_KEY
            FIREBASE_MESSAGING_SENDER_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/FIREBASE_MESSAGING_SENDER_ID
            WEB_FIREBASE_APP_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_FIREBASE_APP_ID
            WEB_FIREBASE_MEASUREMENT_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_FIREBASE_MEASUREMENT_ID
            WEB_SENTRY_DSN:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_SENTRY_DSN
            WEB_FACEBOOK_APP_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_FACEBOOK_APP_ID
            WEB_DNS:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_DNS
            SSH_HOST:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-web myriadsocial/myriad-web \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.appName="${{ steps.secrets.outputs.WEB_APP_NAME }}" \
              --set-string config.appStatus=${{ steps.secrets.outputs.WEB_APP_STATUS }} \
              --set-string config.appVersion=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.nextAuthURL=https://${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string config.nextSecret=b53fdfd09ee04c267efcde87b4eab030 \
              --set-string config.apiURL=${{ steps.secrets.outputs.API_URL }} \
              --set-string config.apiKey=${{ steps.secrets.outputs.API_KEY }} \
              --set-string config.websiteURL=${{ steps.secrets.outputs.WEBSITE_URL }} \
              --set-string config.supportMail=${{ steps.secrets.outputs.SUPPORT_MAIL }} \
              --set-string config.firebase.projectId=${{ steps.secrets.outputs.FIREBASE_PROJECT_ID }} \
              --set-string config.firebase.apiKey=${{ steps.secrets.outputs.FIREBASE_API_KEY }} \
              --set-string config.firebase.messagingSenderId=${{ steps.secrets.outputs.FIREBASE_MESSAGING_SENDER_ID }} \
              --set-string config.firebase.appId=${{ steps.secrets.outputs.WEB_FIREBASE_APP_ID }} \
              --set-string config.firebase.measurementId=${{ steps.secrets.outputs.WEB_FIREBASE_MEASUREMENT_ID }} \
              --set-string config.sentry.dsn=${{ steps.secrets.outputs.WEB_SENTRY_DSN }} \
              --set-string config.facebook.appId=${{ steps.secrets.outputs.WEB_FACEBOOK_APP_ID }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-app-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-web

  deploy-release:
    if: "startsWith(github.ref, 'refs/tags/') && !github.event.release.prerelease"
    runs-on: ubuntu-latest
    needs: [compute-build-info]
    env:
      DEPLOY: ${{ secrets.MAINNET_DEPLOY }}
    steps:
      - name: Checkout code
        if: "${{ env.DEPLOY == 'true' }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Cloud SDK
        if: "${{ env.DEPLOY == 'true' }}"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.MAINNET_GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.MAINNET_GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get secrets
        if: "${{ env.DEPLOY == 'true' }}"
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        with:
          secrets: |-
            WEB_APP_NAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_APP_NAME
            WEB_APP_STATUS:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_APP_STATUS
            API_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/API_URL
            API_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/API_KEY
            WEBSITE_URL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEBSITE_URL
            SUPPORT_MAIL:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SUPPORT_MAIL
            FIREBASE_PROJECT_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/FIREBASE_PROJECT_ID
            FIREBASE_API_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/FIREBASE_API_KEY
            FIREBASE_MESSAGING_SENDER_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/FIREBASE_MESSAGING_SENDER_ID
            WEB_FIREBASE_APP_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_FIREBASE_APP_ID
            WEB_FIREBASE_MEASUREMENT_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_FIREBASE_MEASUREMENT_ID
            WEB_SENTRY_DSN:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_SENTRY_DSN
            WEB_FACEBOOK_APP_ID:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_FACEBOOK_APP_ID
            WEB_DNS:${{ secrets.MAINNET_GCP_PROJECT_ID }}/WEB_DNS
            SSH_HOST:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_HOST
            SSH_USERNAME:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_USERNAME
            SSH_KEY:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_KEY
            SSH_PORT:${{ secrets.MAINNET_GCP_PROJECT_ID }}/SSH_PORT
      - name: Deploy
        if: "${{ env.DEPLOY == 'true' }}"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.secrets.outputs.SSH_HOST }}
          username: ${{ steps.secrets.outputs.SSH_USERNAME }}
          key: ${{ steps.secrets.outputs.SSH_KEY }}
          port: ${{ steps.secrets.outputs.SSH_PORT }}
          script: |
            helm repo add myriadsocial https://charts.myriad.social
            helm repo update
            helm upgrade myriad-web myriadsocial/myriad-web \
              --install \
              --set-string image.tag=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.appName="${{ steps.secrets.outputs.WEB_APP_NAME }}" \
              --set-string config.appStatus=${{ steps.secrets.outputs.WEB_APP_STATUS }} \
              --set-string config.appVersion=${{ needs.compute-build-info.outputs.latest_tag }} \
              --set-string config.nextAuthURL=https://${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string config.nextSecret=b53fdfd09ee04c267efcde87b4eab030 \
              --set-string config.apiURL=${{ steps.secrets.outputs.API_URL }} \
              --set-string config.apiKey=${{ steps.secrets.outputs.API_KEY }} \
              --set-string config.websiteURL=${{ steps.secrets.outputs.WEBSITE_URL }} \
              --set-string config.supportMail=${{ steps.secrets.outputs.SUPPORT_MAIL }} \
              --set-string config.firebase.projectId=${{ steps.secrets.outputs.FIREBASE_PROJECT_ID }} \
              --set-string config.firebase.apiKey=${{ steps.secrets.outputs.FIREBASE_API_KEY }} \
              --set-string config.firebase.messagingSenderId=${{ steps.secrets.outputs.FIREBASE_MESSAGING_SENDER_ID }} \
              --set-string config.firebase.appId=${{ steps.secrets.outputs.WEB_FIREBASE_APP_ID }} \
              --set-string config.firebase.measurementId=${{ steps.secrets.outputs.WEB_FIREBASE_MEASUREMENT_ID }} \
              --set-string config.sentry.dsn=${{ steps.secrets.outputs.WEB_SENTRY_DSN }} \
              --set-string config.facebook.appId=${{ steps.secrets.outputs.WEB_FACEBOOK_APP_ID }} \
              --set ingress.enabled=true \
              --set-string ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
              --set-string ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
              --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="100m" \
              --set-string ingress.annotations."nginx\.org/client-max-body-size"="100m" \
              --set-string ingress.hosts[0].host=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string ingress.hosts[0].paths[0].path=/ \
              --set-string ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
              --set-string ingress.tls[0].secretName=myriad-app-tls \
              --set-string ingress.tls[0].hosts[0]=${{ steps.secrets.outputs.WEB_DNS }} \
              --set-string resources.requests.cpu=300m \
              --set-string resources.requests.memory=512Mi \
              --set-string resources.limits.cpu=500m \
              --set-string resources.limits.memory=1024Mi \
              --set replicaCount=3 \
              --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=3 \
              --set autoscaling.maxReplicas=100
            kubectl rollout status deployment/myriad-web
